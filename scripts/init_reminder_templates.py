#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
"""
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from datetime import datetime
import json
from app.db_sa import get_session
from app.models_sa import ReminderRuleTemplateORM
from sqlalchemy import select


# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
SYSTEM_TEMPLATES = [
    {
        "name": "–ü—Ä–æ—Å—Ç–∞—è –∑–∞–¥–∞—á–∞ - –°—Ç–∞–Ω–¥–∞—Ä—Ç",
        "description": "–ó–∞ –¥–µ–Ω—å –∏ –∑–∞ —á–∞—Å –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞",
        "category": "simple",
        "icon": "üìå",
        "suitable_for": ["simple"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 1440},  # –ó–∞ 1 –¥–µ–Ω—å
            {"rule_type": "before_start", "offset_minutes": 60},    # –ó–∞ 1 —á–∞—Å
        ]
    },
    {
        "name": "–ü—Ä–æ—Å—Ç–∞—è –∑–∞–¥–∞—á–∞ - –ê–∫—Ç–∏–≤–Ω–∞—è",
        "description": "–ß–∞—Å—Ç—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–µ–¥–ª–∞–π–Ω–æ–º",
        "category": "simple",
        "icon": "üìå",
        "suitable_for": ["simple"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 4320},  # –ó–∞ 3 –¥–Ω—è
            {"rule_type": "before_start", "offset_minutes": 1440},  # –ó–∞ 1 –¥–µ–Ω—å
            {"rule_type": "before_start", "offset_minutes": 180},   # –ó–∞ 3 —á–∞—Å–∞
            {"rule_type": "before_start", "offset_minutes": 60},    # –ó–∞ 1 —á–∞—Å
            {"rule_type": "before_start", "offset_minutes": 15},    # –ó–∞ 15 –º–∏–Ω
        ]
    },
    {
        "name": "–°–æ–±—ã—Ç–∏–µ - –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ",
        "description": "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Ç—Ä–æ–º –∏ –∑–∞ —á–∞—Å –¥–æ –Ω–∞—á–∞–ª–∞",
        "category": "event",
        "icon": "üìÖ",
        "suitable_for": ["event", "recurring_event"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 60},    # –ó–∞ 1 —á–∞—Å
            {"rule_type": "at_start", "offset_minutes": 0},         # –í –º–æ–º–µ–Ω—Ç –Ω–∞—á–∞–ª–∞
        ]
    },
    {
        "name": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ (–§—É—Ç–±–æ–ª)",
        "description": "–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å 16:00, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ",
        "category": "sport",
        "icon": "‚öΩ",
        "suitable_for": ["recurring_event"],
        "rules": [
            {
                "rule_type": "periodic_before",
                "interval_minutes": 30,
                "start_from": "16:00",
                "stop_at": "30"  # 30 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞
            },
            {
                "rule_type": "before_end",
                "offset_minutes": 20
            }
        ]
    },
    {
        "name": "–í–∞–∂–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞",
        "description": "–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏",
        "category": "meeting",
        "icon": "üíº",
        "suitable_for": ["event"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 4320},  # –ó–∞ 3 –¥–Ω—è (–ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è)
            {"rule_type": "before_start", "offset_minutes": 120},   # –ó–∞ 2 —á–∞—Å–∞
            {"rule_type": "before_start", "offset_minutes": 30},    # –ó–∞ 30 –º–∏–Ω (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Å—Ç–æ)
            {"rule_type": "before_start", "offset_minutes": 10},    # –ó–∞ 10 –º–∏–Ω (–≤—ã—Ö–æ–¥–∏—Ç—å)
            {"rule_type": "at_start", "offset_minutes": 0},         # –í –º–æ–º–µ–Ω—Ç –Ω–∞—á–∞–ª–∞
        ]
    },
    {
        "name": "–û–Ω–ª–∞–π–Ω-–≤—Å—Ç—Ä–µ—á–∞/–°–æ–∑–≤–æ–Ω",
        "description": "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –≤—Å—Ç—Ä–µ—á–µ",
        "category": "meeting",
        "icon": "üìû",
        "suitable_for": ["event"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 15},    # –ó–∞ 15 –º–∏–Ω (–ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã)
            {"rule_type": "before_start", "offset_minutes": 2},     # –ó–∞ 2 –º–∏–Ω (–æ—Ç–∫—Ä—ã—Ç—å Zoom)
            {"rule_type": "at_start", "offset_minutes": 0},         # –í –º–æ–º–µ–Ω—Ç –Ω–∞—á–∞–ª–∞
        ]
    },
    {
        "name": "–ü—Ä–∏–µ–º –ª–µ–∫–∞—Ä—Å—Ç–≤",
        "description": "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è",
        "category": "health",
        "icon": "üíä",
        "suitable_for": ["recurring_event"],
        "rules": [
            {"rule_type": "at_start", "offset_minutes": 0},         # –í —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è
            {"rule_type": "after_end", "offset_minutes": 10},       # –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 10 –º–∏–Ω
        ]
    },
    {
        "name": "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
        "description": "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ –∏ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å",
        "category": "personal",
        "icon": "üéÇ",
        "suitable_for": ["event"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 10080},  # –ó–∞ –Ω–µ–¥–µ–ª—é (–∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫)
            {"rule_type": "before_start", "offset_minutes": 4320},   # –ó–∞ 3 –¥–Ω—è (–æ—Ñ–æ—Ä–º–∏—Ç—å)
            {"rule_type": "before_start", "offset_minutes": 1440},   # –ó–∞ –¥–µ–Ω—å (–ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å)
        ]
    },
    {
        "name": "–°–ø–æ—Ä—Ç–∑–∞–ª/–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
        "description": "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
        "category": "sport",
        "icon": "üèãÔ∏è",
        "suitable_for": ["recurring_event"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 120},   # –ó–∞ 2 —á–∞—Å–∞ (–ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è)
            {"rule_type": "before_start", "offset_minutes": 30},    # –ó–∞ 30 –º–∏–Ω (—Å–æ–±—Ä–∞—Ç—å —Å—É–º–∫—É)
            {"rule_type": "before_start", "offset_minutes": 10},    # –ó–∞ 10 –º–∏–Ω (–≤—ã—Ö–æ–¥–∏—Ç—å)
        ]
    },
    {
        "name": "–û–ø–ª–∞—Ç–∞ —Å—á–µ—Ç–∞",
        "description": "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ –∑–∞–±—ã—Ç—å –æ–ø–ª–∞—Ç–∏—Ç—å",
        "category": "finance",
        "icon": "üí≥",
        "suitable_for": ["simple", "event"],
        "rules": [
            {"rule_type": "before_start", "offset_minutes": 4320},  # –ó–∞ 3 –¥–Ω—è
            {"rule_type": "before_start", "offset_minutes": 1440},  # –ó–∞ 1 –¥–µ–Ω—å
            {"rule_type": "before_start", "offset_minutes": 60},    # –ó–∞ 1 —á–∞—Å
        ]
    },
]


def init_templates():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤"""
    
    with get_session() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
        existing = session.execute(
            select(ReminderRuleTemplateORM).where(
                ReminderRuleTemplateORM.is_system == True
            )
        ).scalars().all()
        
        if existing:
            print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {len(existing)} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤")
            response = input("–£–¥–∞–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å? (yes/no): ")
            if response.lower() != 'yes':
                print("–û—Ç–º–µ–Ω–µ–Ω–æ")
                return
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ
            for template in existing:
                session.delete(template)
            session.commit()
            print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {len(existing)} —Å—Ç–∞—Ä—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
        now = datetime.now().isoformat()
        created_count = 0
        
        for template_data in SYSTEM_TEMPLATES:
            template = ReminderRuleTemplateORM(
                name=template_data["name"],
                description=template_data["description"],
                category=template_data["category"],
                icon=template_data["icon"],
                rules_json=json.dumps(template_data["rules"], ensure_ascii=False),
                suitable_for_task_types=json.dumps(template_data["suitable_for"]),
                is_system=True,
                is_active=True,
                usage_count=0,
                created_at=now,
                updated_at=now
            )
            session.add(template)
            created_count += 1
            print(f"  {template_data['icon']} {template_data['name']}")
        
        session.commit()
        print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ {created_count} —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤!")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        categories = {}
        for t in SYSTEM_TEMPLATES:
            cat = t["category"]
            categories[cat] = categories.get(cat, 0) + 1
        
        for cat, count in sorted(categories.items()):
            print(f"  {cat}: {count}")


if __name__ == '__main__':
    try:
        print("üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤\n")
        init_templates()
        print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
